{"version":3,"file":"static/js/565.778d15d5.chunk.js","mappings":"sOAEaA,E,OAAaC,GAAAA,GAAH,2G,SCuCvB,EApCa,WACX,OAAwBC,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAASI,MAAK,SAAAC,GAAQ,OAAIN,EAAQM,EAASC,KAAKR,KAA1B,GACtC,GAAE,CAACE,KAGF,0BACE,SAACL,EAAD,iBACGG,QADH,IACGA,OADH,EACGA,EAAMS,KAAI,SAAAC,GACT,OACE,2BACE,yBACGA,EAAMC,cACL,gBACEC,IAAG,UAAKC,EAAAA,GAAL,eAAwBH,EAAMC,cACjCG,IAAI,iBAGN,qBAGJ,4BACE,kCAAUJ,EAAMK,SAChB,kCAAUL,EAAMM,kBAbXN,EAAMO,GAiBlB,OAIR,C,uNCrCKC,EAAW,gCACXC,EAAM,mCACCN,EAAe,8BAEfO,EAAmB,mCAAG,8FAC3BC,EAAAA,EAAAA,IAAA,UACDH,EADC,sCACqCC,EADrC,oBAD2B,mFAAH,qDAKnBG,EAAe,mCAAG,WAAMpB,GAAN,iFACvBmB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BhB,EAA9B,oBAAiDiB,EAAjD,oBADuB,mFAAH,sDAGfI,EAAiB,mCAAG,WAAMrB,GAAN,iFACzBmB,EAAAA,EAAAA,IAAA,UACDH,EADC,iBACgBhB,EADhB,4BAC2CiB,EAD3C,oBADyB,mFAAH,sDAKjBd,EAAc,mCAAG,WAAMH,GAAN,iFACtBmB,EAAAA,EAAAA,IAAA,UACDH,EADC,iBACgBhB,EADhB,4BAC2CiB,EAD3C,oBADsB,mFAAH,sDAKdK,EAAiB,mCAAG,WAAMC,GAAN,iFACzBJ,EAAAA,EAAAA,IAAA,UACDH,EADC,iCACgCC,EADhC,iCAC4DM,IAFnC,mFAAH,qD","sources":["pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx","services/MoviesAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ActorsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BASE_IMG_URL, fetchMovieCast } from 'services/MoviesAPI';\nimport { ActorsList } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieCast(movieId).then(response => setCast(response.data.cast));\n  }, [movieId]);\n\n  return (\n    <div>\n      <ActorsList>\n        {cast?.map(actor => {\n          return (\n            <li key={actor.id}>\n              <div>\n                {actor.profile_path ? (\n                  <img\n                    src={`${BASE_IMG_URL}w300${actor.profile_path}`}\n                    alt=\"Actor poster\"\n                  />\n                ) : (\n                  'Not found photo'\n                )}\n              </div>\n              <div>\n                <h5>Name:{actor.name}</h5>\n                <h5>Role:{actor.character}</h5>\n              </div>\n            </li>\n          );\n        })}\n      </ActorsList>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'f3e1ed456186eb8f418c2248d99e5eff';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/';\n\nexport const fetchTrendingMovies = async () =>\n  await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n\nexport const fetchMoviesById = async movieId =>\n  await axios.get(`${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`);\n\nexport const fetchMovieReviews = async movieId =>\n  await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n  );\n\nexport const fetchMovieCast = async movieId =>\n  await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n\nexport const fetchSearchMovies = async movie =>\n  await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${movie}`\n  );\n"],"names":["ActorsList","styled","useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCast","then","response","data","map","actor","profile_path","src","BASE_IMG_URL","alt","name","character","id","BASE_URL","KEY","fetchTrendingMovies","axios","fetchMoviesById","fetchMovieReviews","fetchSearchMovies","movie"],"sourceRoot":""}